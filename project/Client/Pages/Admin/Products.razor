@page "/admin/products"
@inject IProductService ProductService
@inject NavigationManager NavigationManager
@attribute [Authorize(Roles = "Admin")]

<h3>Products</h3>

@if (ProductService.AdminProducts == null)
{
    <span>Loading Products...</span>
}
else
{
    <nav aria-label="Page navigation example">
        <ul class="pagination">
            <li class="page-item">
                <a class="page-link" aria-label="Previous" @onclick="() => ChangePage(pageNo++)">
                    <span aria-hidden="true">&laquo;</span>
                </a>
            </li>
            <li class="page-item"><a class="page-link" @onclick="() => ChangePage(1)">1</a></li>
            <li class="page-item"><a class="page-link" @onclick="() => ChangePage(2)">2</a></li>
            <li class="page-item"><a class="page-link" @onclick="() => ChangePage(3)">3</a></li>
            <li class="page-item"><a class="page-link" @onclick="() => ChangePage(4)">4</a></li>
            <li class="page-item"><a class="page-link" @onclick="() => ChangePage(5)">5</a></li>
            <li class="page-item">
                <a class="page-link" aria-label="Next" @onclick="() => ChangePage(pageNo++)">
                    <span aria-hidden="true">&raquo;</span>
                </a>
            </li>
        </ul>
    </nav>

    <button class="btn btn-primary float-end" @onclick="CreateProduct">
        <i class="oi oi-plus"></i> Add new product
    </button>
    <table class="table">
        <thead>
            <tr>
                @* <th></th> *@
                <th>Product</th>
                <th>Variant</th>
                <th>Price</th>
                <th>Visible</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            <Virtualize Items="ProductService.AdminProducts" Context="product">
                <tr>
                    <td>@product.Title</td>
                    <td>
                        @foreach (var variant in product.Variants)
                        {
                            <span>@variant.ProductType.Name</span>
                            <br />
                        }
                    </td>
                    <td>
                        @foreach (var variant in product.Variants)
                        {
                            <span>@variant.Price</span>
                            <br />
                        }
                    </td>
                    <td>@(product.Visible ? "✔️" : "❌")</td>
                    <td>
                        <button class="btn btn-primary" @onclick="(() => EditProduct(product.Id))">
                            <i class="oi oi-pencil"></i>
                        </button>
                    </td>
                </tr>
            </Virtualize>
        </tbody>
    </table>
}

@code {
    private int pageNo { get; set; } = 1;
    @* int productsPerPage = 5; // Sayfa başına gösterilecek ürün sayısı
    int totalProducts = 52;  // Toplam ürün sayısı
    int totalPages => (int)Math.Ceiling(totalProducts / (double)productsPerPage); // Toplam sayfa sayısı *@
    private List<Product> ProductList { get; set; } = new List<Product>();

    protected override async Task OnInitializedAsync()
    {
        await ProductService.GetAdminProducts(pageNo);
    }

    async Task ChangePage(int page)
    {
        pageNo = page;
        await ProductService.GetAdminProducts(pageNo);
        StateHasChanged();
    }

    void EditProduct(int productId)
    {
        NavigationManager.NavigateTo($"admin/product/{productId}");
    }
    void CreateProduct()
    {
        NavigationManager.NavigateTo("admin/product");
    }
}
