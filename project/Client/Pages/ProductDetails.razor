@page "/product/{id:int}"
@inject IProductService ProductService
@inject ICartService CartService

@if (product == null)
{
    <span>@message</span>
}
else
{
    <div class="row">
        <!-- Ürün Görsel ve Açıklama -->
        <div class="col-8">
            <div class="media">
                <div class="media-img-wrapper mr-2">
                    @if (!string.IsNullOrEmpty(product.product.ImageUrl))
                    {
                        <img class="media-img" src="../images/@product.product.ImageUrl" alt="@product.product.Title" />
                    }
                    else
                    {
                        <MudCarousel Class="mud-width-full" ItemsSource="@product.product.Images" Style="height: 200px;">
                            <ItemTemplate>
                                @* <MudImage Src="@context.Data"></MudImage>> *@
                            </ItemTemplate>
                        </MudCarousel>
                    }
                </div>
                <div class="media-body">
                    <h2 class="mb-0">@product.product.Title</h2>
                    <p>@product.product.Description</p>
                    @if (product.product.Variants != null && product.product.Variants.Count > 1)
                    {
                        <div class="mb-3">
                            <select class="form-select" @bind="currentTypeId">
                                @foreach (var variant in product.product.Variants)
                                {
                                    <option value="@variant.ProductTypeId">@variant.ProductType.Name</option>
                                }
                            </select>
                        </div>
                    }
                    @if (GetSelectedVariant() != null)
                    {
                        @if (GetSelectedVariant().OriginalPrice > GetSelectedVariant().Price)
                        {
                            <h6 class="text-muted original-price">
                                $@GetSelectedVariant().OriginalPrice
                            </h6>
                        }
                        <h4 class="price">
                            $@GetSelectedVariant().Price
                        </h4>
                    }
                    <button class="btn btn-primary" @onclick="AddToCart">
                        <i class="oi oi-cart"></i>&nbsp;&nbsp;&nbsp;Add to Cart
                    </button>
                </div>
            </div>
        </div>

        <!-- Ürün Özellikleri (Manuel Statik) -->
        <div class="col-4">
            <h5>Product Features</h5>
            <table class="table table-bordered">
                <tbody>
                    @foreach(var item in product.keyValues){
                        <tr>
                            <th class="w-50">@item.Key</th>
                            <td>@item.Value</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
}

@code {
    private ProductProperty? product = null;
    private string message = string.Empty;
    private int currentTypeId = 1;

    [Parameter]
    public int Id { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        message = "Loading product...";

        var result = await ProductService.GetProduct(Id);
        if (!result.Success)
        {
            message = result.Message;
        }
        else
        {
            product = result.Data;
            if (product.product.Variants.Count > 0)
            {
                currentTypeId = product.product.Variants[0].ProductTypeId;
            }
        }
    }

    private ProductVariant GetSelectedVariant()
    {
        var variant = product.product.Variants.FirstOrDefault(v => v.ProductTypeId == currentTypeId);
        return variant;
    }

    private async Task AddToCart()
    {
        var productVariant = GetSelectedVariant();
        var cartItem = new CartItem
        {
            ProductId = productVariant.ProductId,
            ProductTypeId = productVariant.ProductTypeId
        };

        await CartService.AddToCart(cartItem);
    }
}
