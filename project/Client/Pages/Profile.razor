@page "/profile"
@inject IAuthService AuthService
@attribute [Authorize]

<div class="container mt-5">
    <AuthorizeView>
        <div class="alert alert-success text-center">
            <h3>Hi! You're logged in as <i>@context.User.Identity.Name</i>.</h3>
        </div>
    </AuthorizeView>

    <div class="card shadow-sm mb-4">
        <div class="card-header bg-secondary text-white">
            <h5 class="card-title mb-0">Delivery Address</h5>
        </div>
        <div class="card-body">
            <AddressForm />
        </div>
    </div>

    <div class="card shadow-sm">
        <div class="card-header bg-secondary text-white">
            <h5 class="card-title mb-0">Change Password</h5>
        </div>
        <div class="card-body">
            <EditForm Model="request" OnValidSubmit="ChangePassword">
                <DataAnnotationsValidator></DataAnnotationsValidator>
                <div class="mb-3">
                    <label for="password" class="form-label">New Password</label>
                    <InputText id="password" @bind-Value="request.Password" class="form-control" type="password" placeholder="Enter your new password" />
                    <ValidationMessage For="@(() => request.Password)" class="text-danger" />
                </div>
                <div class="mb-3">
                    <label for="confirmPassword" class="form-label">Confirm New Password</label>
                    <InputText id="confirmPassword" @bind-Value="request.ConfirmPassword" class="form-control" type="password" placeholder="Re-enter your new password" />
                    <ValidationMessage For="@(() => request.ConfirmPassword)" class="text-danger" />
                </div>
                <div class="d-grid gap-2">
                    <button type="submit" class="btn btn-secondary btn-block">Apply</button>
                </div>
            </EditForm>
            @if (!string.IsNullOrWhiteSpace(message))
            {
                <div class="alert alert-info mt-3">@message</div>
            }
        </div>
    </div>
</div>

@code {
    UserChangePassword request = new UserChangePassword();
    string message = string.Empty;

    private async Task ChangePassword()
    {
        var result = await AuthService.ChangePassword(request);
        message = result.Message;
    }
}
